import java.io.InputStream;
import java.io.OutputStream;

public class DNSHeader 
{

    /*  read the header from an input stream (we'll use a ByteArrayInputStream
     *  but we will only use the basic read methods of input stream to read 1 byte,
     *  or to fill in a byte array, so we'll be generic)
     */
    public static DNSHeader DecodeHeader(InputStream inputStream)
    {
        return new DNSHeader();
    }

    /*  This will create the header for the response. It will copy some fields
     *  from the request, and it could use the response message being built to
     *  find out about the number of answers for the response.
     */
    public static DNSHeader BuildHeaderForResponse(DNSMessage request, DNSMessage response)
    {
        return new DNSHeader();
    }

    /*  Encode the header to bytes to be sent back to the client. The OutputStream interface
     *  has methods to write a single byte or an array of bytes.
     */
    public void WriteBytes(OutputStream outputStream)
    {
        return;
    }

    /*  Return a human readable string version of a header object. A reasonable implementation can
     *  be autogenerated by your IDE.
     */
    public String ToString()
    {
        return "";
    }

}
